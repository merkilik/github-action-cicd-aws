# This is a basic workflow to help you get started with Actions

name: CI-CD-pipeline-AWS-beanstalk

env:
  EB_PACKAGE_S3_BUCKET_NAME : "galym-flask-app-packages"
  EB_APPLICATION_NAME       : "myFlask"
  EB_ENVIRONMENT            : "myFlask-env"
  DEPLOY_PACKAGE_NAME       : "flask_app_${{ github.sha }}.zip
  AWS_REGION_NAME           : "us-west-2"


on:

  push:
    branches: 
      - master



jobs: 
  my_ci_ part:

    runs-on: ubuntu-latest

    steps:
      - name: Git clone our repo
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Create ZIP deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
        
      - name: Configure my AWS credentials
        uses: aws-actions/confure-aws-credentials@v1
        with:
          aws-access-key-id : ${{ secrets.MY_AWS_ACCESS_KEY }}
          aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}
          aws-region : ${{ env.AWS_REGION_NAME }}
      - name: Copy Deployment package to S3 bucket
        run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://{{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
        
      - name: Print Happy message for CI finish
        run : echo "CI pipeline part finished successfully!" 
        
  my_cd_ part:

    runs-on: ubuntu-latest
    needs :   my_ci_ part:

    steps:
        - name: Configure my AWS credentials
          uses: aws-actions/confure-aws-credentials@v1
          with:
            aws-access-key-id : ${{ secrets.MY_AWS_ACCESS_KEY }}
            aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }}
            aws-region : ${{ env.AWS_REGION_NAME }}
          
        - name: Create new ElasticBeanstalk application
          run: |
            aws elasticbeanstalk create-application-version \
            --application-name ${{ env.EB_APPLICATION_NAME }} \
            --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
            --version-label "Ver-${{ github.sha }}" \
            --description "CommitSHA-${{ github.sha }}"
            
        - name: Deploy new ElasticBeanstalk application version
          run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT }} --version-label "Ver-${{ github.sha }}"
          
        - name: Print Happy message for CD finish
          run : echo "CD pipeline part finished successfully!"         
